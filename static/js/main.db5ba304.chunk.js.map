{"version":3,"sources":["components/GoodInfo/GoodInfo.tsx","components/GoodsList/GoodsList.tsx","variables/constants.ts","components/SortBar/SortBar.tsx","App.tsx","index.tsx"],"names":["GoodInfo","good","GoodsList","goods","map","SORT_ALPHABET","SORT_LENGTH","SortBar","sortBy","onReverse","isReversed","sortMethod","className","onClick","type","cn","goodsFromServer","App","useState","setIsReversed","setSortMethod","goodsCopy","sort","good1","good2","localeCompare","length","reverse","formatGoods","ReactDOM","render","document","getElementById"],"mappings":"uOAOaA,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,oBAAI,UAAQ,OAAZ,SAAoBA,KCATC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,GAAWA,S,gBCVrCI,EAAgB,OAChBC,EAAc,MCUdC,EAA2B,SAAC,GAAD,IACtCC,EADsC,EACtCA,OACAC,EAFsC,EAEtCA,UACAC,EAHsC,EAGtCA,WACAC,EAJsC,EAItCA,WAJsC,OAMtC,sBAAKC,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAML,EAAOH,IACtBS,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYJ,IAAeN,IAJ/B,iCAUA,wBACEQ,QAAS,kBAAML,EAAOF,IACtBQ,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYJ,IAAeL,IAJ/B,4BAUA,wBACEO,QAAS,kBAAMJ,GAAWC,IAC1BI,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAA2B,IAAfL,IAJhB,sBAUEC,GAAcD,IACd,wBACEG,QAAS,WACPJ,GAAU,GACVD,EAAO,KAETM,KAAK,SACLF,UAAU,4BANZ,uBCzCOI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwBK,IAAMC,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOR,EAAP,KAAmBS,EAAnB,KACA,EAAoCD,mBAAS,IAA7C,mBAAOP,EAAP,KAAmBS,EAAnB,KAEMjB,EAzBR,SAAqBA,EAAeQ,EAAoBD,GACtD,IAAMW,EAAS,YAAOlB,GAEtB,OAAQQ,GACN,KAAKN,EACHgB,EAAUC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACrD,MACF,KAAKlB,EACHe,EAAUC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAU1D,OAJIhB,GACFW,EAAUM,UAGLN,EAOOO,CAAYZ,EAAiBL,EAAYD,GAEvD,OACE,sBAAKE,UAAU,kBAAf,UACE,cAAC,EAAD,CACEJ,OAAQY,EACRX,UAAWU,EACXR,WAAYA,EACZD,WAAYA,IAGd,cAAC,EAAD,CAAWP,MAAOA,QCtDxB0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.db5ba304.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../../types/Good';\n\ninterface Props {\n  good: Good;\n}\n\nexport const GoodInfo: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import React from 'react';\nimport { Good } from '../../types/Good';\nimport { GoodInfo } from '../GoodInfo';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => <GoodInfo good={good} key={good} />)}\n  </ul>\n);\n","export const SORT_ALPHABET = 'alph';\nexport const SORT_LENGTH = 'len';\n","import React from 'react';\nimport cn from 'classnames';\nimport { SORT_ALPHABET, SORT_LENGTH } from '../../variables/constants';\n\ninterface Props {\n  isReversed: boolean\n  sortMethod: string\n  sortBy: React.Dispatch<React.SetStateAction<string>>\n  onReverse: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const SortBar: React.FC<Props> = ({\n  sortBy,\n  onReverse,\n  isReversed,\n  sortMethod,\n}) => (\n  <div className=\"buttons\">\n    <button\n      onClick={() => sortBy(SORT_ALPHABET)}\n      type=\"button\"\n      className={cn('button is-info', {\n        'is-light': sortMethod !== SORT_ALPHABET,\n      })}\n    >\n      Sort alphabetically\n    </button>\n\n    <button\n      onClick={() => sortBy(SORT_LENGTH)}\n      type=\"button\"\n      className={cn('button is-success', {\n        'is-light': sortMethod !== SORT_LENGTH,\n      })}\n    >\n      Sort by length\n    </button>\n\n    <button\n      onClick={() => onReverse(!isReversed)}\n      type=\"button\"\n      className={cn('button is-warning', {\n        'is-light': isReversed === false,\n      })}\n    >\n      Reverse\n    </button>\n\n    {(sortMethod || isReversed) && (\n      <button\n        onClick={() => {\n          onReverse(false);\n          sortBy('');\n        }}\n        type=\"button\"\n        className=\"button is-danger is-light\"\n      >\n        Reset\n      </button>\n    )}\n  </div>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\nimport { SortBar } from './components/SortBar';\nimport { Good } from './types/Good';\nimport { SORT_ALPHABET, SORT_LENGTH } from './variables/constants';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction formatGoods(goods: Good[], sortMethod: string, isReversed: boolean) {\n  const goodsCopy = [...goods];\n\n  switch (sortMethod) {\n    case SORT_ALPHABET:\n      goodsCopy.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SORT_LENGTH:\n      goodsCopy.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return goodsCopy;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortMethod, setSortMethod] = useState('');\n\n  const goods = formatGoods(goodsFromServer, sortMethod, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <SortBar\n        sortBy={setSortMethod}\n        onReverse={setIsReversed}\n        sortMethod={sortMethod}\n        isReversed={isReversed}\n      />\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}